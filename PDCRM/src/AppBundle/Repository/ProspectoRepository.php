<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;


/**
 * ProspectoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProspectoRepository extends EntityRepository
{
    private $doctrineManager;

    public function setDoctrineManager($_doctrineManager)
    {
        $this->doctrineManager = $_doctrineManager;
    }

    public function findByOwner($idUsuario, $activo=1)
    {
        $resultset1 = $this->findBy(array('id_usuario' => $idUsuario, 'activo' => $activo), array('fechaCreacion' => 'DESC'));

        $resultset2 = $this->getEntityManager()
            ->createQuery(
                'SELECT p FROM AppBundle:Prospecto p JOIN p.id_usuario u
                 WHERE u.idUsuarioPadre = :idUsuario AND p.activo = :activo
                 ORDER BY p.fechaCreacion DESC'
            )->setParameter('idUsuario', $idUsuario)
            ->setParameter('activo', $activo)->getResult();

        return array_merge($resultset1, $resultset2);
    }

    /*public function findByOwner2($idUsuario, $activo)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p.* FROM
        (
        SELECT p2.*, tp.nombre as tipo_prospecto_nombre FROM prospecto p2
        LEFT JOIN tipoprospecto tp ON tp.id = p2.id_tipo_prospecto
        WHERE p2.activo = " . strval($activo) . " AND p2.id_usuario = :idUsuario
        UNION
        SELECT p3.*, tp.nombre as tipo_prospecto_nombre FROM prospecto p3
        INNER JOIN usuario u ON u.id = p3.id_usuario
        LEFT JOIN tipoprospecto tp ON tp.id = p3.id_tipo_prospecto
        WHERE u.id_usuario_padre = :idUsuario AND p3.activo = " . strval($activo) .
        ") p
        ORDER BY p.fecha_creacion DESC
        ");
        $statement->bindValue('idUsuario', $idUsuario);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }*/

    public function findByOwner2Paged($idUsuario, $activo, $inicio, $maxresultados)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p.* FROM
        (
        SELECT p2.*, tp.nombre as tipo_prospecto_nombre, (SELECT MAX(ps.id_solicitud) FROM prospecto_solicitud ps WHERE id_prospecto = p2.id) as idsolicitud FROM prospecto p2
        LEFT JOIN tipoprospecto tp ON tp.id = p2.id_tipo_prospecto
        WHERE p2.activo = " . strval($activo) . " AND p2.id_usuario = :idUsuario
        UNION
        SELECT p3.*, tp.nombre as tipo_prospecto_nombre, (SELECT MAX(ps.id_solicitud) FROM prospecto_solicitud ps WHERE id_prospecto = p3.id) as idsolicitud FROM prospecto p3
        INNER JOIN usuario u ON u.id = p3.id_usuario
        LEFT JOIN tipoprospecto tp ON tp.id = p3.id_tipo_prospecto
        WHERE u.id_usuario_padre = :idUsuario AND p3.activo = " . strval($activo) .
        ") p
        ORDER BY p.fecha_creacion DESC LIMIT " . $inicio . "," . $maxresultados
        );
        $statement->bindValue('idUsuario', $idUsuario);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByOwner2Count($idUsuario, $activo)
    {
        /*
        $count = $this->getEntityManager()->createQuery("
        SELECT COUNT(p.id) FROM
        (
        SELECT p2.id as id FROM prospecto p2
        WHERE p2.activo = " . strval($activo) . " AND p2.id_usuario = " . strval($idUsuario) .
        " UNION SELECT p3.id as id FROM prospecto p3
        INNER JOIN usuario u ON u.id = p3.id_usuario
        WHERE u.id_usuario_padre = ". strval($idUsuario) . " AND p3.activo = " . strval($activo) . ") p")->getSingleScalarResult();

        return $count;*/

        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p.* FROM
        (
        SELECT p2.id FROM prospecto p2
        WHERE p2.activo = " . strval($activo) . " AND p2.id_usuario = :idUsuario
        UNION
        SELECT p3.id FROM prospecto p3
        INNER JOIN usuario u ON u.id = p3.id_usuario
        WHERE u.id_usuario_padre = :idUsuario AND p3.activo = " . strval($activo) .
        ") p"
        );
        $statement->bindValue('idUsuario', $idUsuario);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return count($resultset);
    }

    /*
    public function findByOwnerBusqueda2($idUsuario, $buscar)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p.* FROM
        (
        SELECT p2.*, tp.nombre as tipo_prospecto_nombre FROM prospecto p2
        LEFT JOIN tipoprospecto tp ON tp.id = p2.id_tipo_prospecto
        WHERE p2.id_usuario = :idUsuario AND
        UPPER(CONCAT(IFNULL(p2.nombre,''),' ',IFNULL(p2.apellidos,''))) LIKE UPPER('%" . $buscar . "%')
        UNION
        SELECT p3.*, tp.nombre as tipo_prospecto_nombre FROM prospecto p3
        INNER JOIN usuario u ON u.id = p3.id_usuario
        LEFT JOIN tipoprospecto tp ON tp.id = p3.id_tipo_prospecto
        WHERE u.id_usuario_padre = :idUsuario AND
        UPPER(CONCAT(IFNULL(p3.nombre,''),' ',IFNULL(p3.apellidos,''))) LIKE UPPER('%" . $buscar . "%')
        ) p
        ORDER BY p.fecha_creacion DESC
        ");
        $statement->bindValue('idUsuario', $idUsuario);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }*/


    public function findByOwnerBusqueda2Paged($idUsuario, $buscar, $inicio, $maxresultados)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p.* FROM
        (
        SELECT p2.*, tp.nombre as tipo_prospecto_nombre, (SELECT MAX(ps.id_solicitud) FROM prospecto_solicitud ps WHERE id_prospecto = p2.id) as idsolicitud FROM prospecto p2
        LEFT JOIN tipoprospecto tp ON tp.id = p2.id_tipo_prospecto
        WHERE p2.id_usuario = :idUsuario AND
        UPPER(CONCAT(IFNULL(p2.nombre,''),' ',IFNULL(p2.apellidos,''))) LIKE UPPER('%" . $buscar . "%')
        UNION
        SELECT p3.*, tp.nombre as tipo_prospecto_nombre, (SELECT MAX(ps.id_solicitud) FROM prospecto_solicitud ps WHERE id_prospecto = p3.id) as idsolicitud FROM prospecto p3
        INNER JOIN usuario u ON u.id = p3.id_usuario
        LEFT JOIN tipoprospecto tp ON tp.id = p3.id_tipo_prospecto
        WHERE u.id_usuario_padre = :idUsuario AND
        UPPER(CONCAT(IFNULL(p3.nombre,''),' ',IFNULL(p3.apellidos,''))) LIKE UPPER('%" . $buscar . "%')
        ) p
        ORDER BY p.fecha_creacion DESC LIMIT " . $inicio . "," . $maxresultados
        );
        $statement->bindValue('idUsuario', $idUsuario);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByOwnerBusqueda2Count($idUsuario, $buscar)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p.id FROM
        (
        SELECT p2.id FROM prospecto p2
        WHERE p2.id_usuario = :idUsuario AND
        UPPER(CONCAT(IFNULL(p2.nombre,''),' ',IFNULL(p2.apellidos,''))) LIKE UPPER('%" . $buscar . "%')
        UNION
        SELECT p3.id FROM prospecto p3
        INNER JOIN usuario u ON u.id = p3.id_usuario
        WHERE u.id_usuario_padre = :idUsuario AND
        UPPER(CONCAT(IFNULL(p3.nombre,''),' ',IFNULL(p3.apellidos,''))) LIKE UPPER('%" . $buscar . "%')
        ) p"
        );
        $statement->bindValue('idUsuario', $idUsuario);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return count($resultset);
    }

    public function findByTodos()
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p2.*, tp.nombre as tipo_prospecto_nombre FROM prospecto p2
        LEFT JOIN tipoprospecto tp ON tp.id = p2.id_tipo_prospecto
        WHERE p2.activo = 1
        ORDER BY p2.fecha_creacion DESC
        ");
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByTodosPaged($inicio, $maxresultados, $activo)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p2.*, tp.nombre as tipo_prospecto_nombre, (SELECT MAX(ps.id_solicitud) FROM prospecto_solicitud ps WHERE id_prospecto = p2.id) as idsolicitud FROM prospecto p2 " .
        "LEFT JOIN tipoprospecto tp ON tp.id = p2.id_tipo_prospecto " .
        "WHERE p2.activo = " . strval($activo) .
        " ORDER BY p2.fecha_creacion DESC " .
        "LIMIT " . $inicio . "," . $maxresultados);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByTodosPagedBusqueda($inicio, $maxresultados, $buscar)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p2.*, tp.nombre as tipo_prospecto_nombre, (SELECT MAX(ps.id_solicitud) FROM prospecto_solicitud ps WHERE id_prospecto = p2.id) as idsolicitud FROM prospecto p2 " .
            "LEFT JOIN tipoprospecto tp ON tp.id = p2.id_tipo_prospecto " .
            "WHERE UPPER(CONCAT(IFNULL(p2.nombre,''),' ',IFNULL(p2.apellidos,''))) LIKE UPPER('%" . $buscar . "%')" .
            " ORDER BY p2.fecha_creacion DESC " .
            "LIMIT " . $inicio . "," . $maxresultados);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByTodosCount($activo)
    {
        $count = $this->getEntityManager()->createQuery("
        SELECT COUNT(p2.idProspecto) FROM AppBundle:Prospecto p2
        WHERE p2.activo = " . strval($activo)
        )->getSingleScalarResult();

        return $count;
    }

    public function findByTodosBusquedaCount($buscar)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
        SELECT p2.id FROM prospecto p2 " .
            "WHERE UPPER(CONCAT(IFNULL(p2.nombre,''),' ',IFNULL(p2.apellidos,''))) LIKE UPPER('%" . $buscar . "%')");
        $statement->execute();

        $resultset = $statement->fetchAll();

        return count($resultset);
    }

    public function findByOwnerCount($idUsuario)
    {
        $count1 = count($this->findBy(array('id_usuario' => $idUsuario, 'activo' => true)));

        $count2 = $this->getEntityManager()
            ->createQuery(
                'SELECT count(p.idProspecto) FROM AppBundle:Prospecto p JOIN p.id_usuario u
                 WHERE u.idUsuarioPadre = :idUsuario AND p.activo=1'
            )->setParameter('idUsuario', $idUsuario)->getSingleScalarResult();

        return $count1 + $count2;
    }

    public function findByCount()
    {
        $count2 = $this->getEntityManager()
            ->createQuery(
                'SELECT count(p.idProspecto) FROM AppBundle:Prospecto p
                 WHERE p.activo = 1'
            )->getSingleScalarResult();

        return  $count2;
    }

    public function findByOwnerTop3(/*$idUsuario*/)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("SELECT u.*, count(*) as total
        FROM prospecto p
        INNER JOIN usuario u ON u.id = p.id_usuario
        WHERE p.activo = 1
        GROUP BY u.id
        ORDER BY count(p.id) DESC
        LIMIT 5
        ");
        //$statement->bindValue('idUsuario', $idUsuario);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByProspectoInmuebles($idProspecto)
    {
        $inmuebles = array();

        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("SELECT DISTINCT ip.id_inmueble as id_inmueble FROM inmueble_prospecto ip
WHERE ip.id_prospecto = :idProspecto ");
        $statement->bindValue('idProspecto', $idProspecto);
        $statement->execute();
        $idsinmuebles = $statement->fetchAll();

        foreach ($idsinmuebles as $idinmueble)
        {
            $inmueble = $this->doctrineManager->getRepository('AppBundle:Inmueble')->findOneByIdInmueble($idinmueble['id_inmueble']);
            array_push($inmuebles, $inmueble);
        }

        return $inmuebles;
    }

    public function findByOwnerCanalCaptacion($idUsuario)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("SELECT cc.nombre, COUNT(*) as total FROM
        (
        SELECT p.id, id_canal_captacion FROM prospecto p
        WHERE id_usuario = :idUsuario AND p.activo=1
        UNION
        SELECT p.id, p.id_canal_captacion FROM prospecto p
        INNER JOIN usuario u ON u.id_usuario_padre = p.id_usuario
        WHERE id_usuario = :idUsuario AND p.activo=1
        ) t
        INNER JOIN canalcaptacion cc ON cc.id = t.id_canal_captacion
        GROUP BY cc.nombre");
        $statement->bindValue('idUsuario', $idUsuario);
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByCanalCaptacion()
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("SELECT cc.nombre, COUNT(*) as total FROM
        (
        SELECT p.id, id_canal_captacion FROM prospecto p
        WHERE p.activo=1
        ) t
        INNER JOIN canalcaptacion cc ON cc.id = t.id_canal_captacion
        GROUP BY cc.nombre");
        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }





    public function findByOwnerProspectoSeguimiento($idUsuario)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("SELECT p.nombre, p.apellidos, max(t.fecha) as fecha, u.nombre as nombre_encargado,
                 (
                     SELECT a.nombre
                     FROM tarea t
                     INNER JOIN accion a ON a.id = t.id_accion
                     WHERE t.fecha = fecha AND t.id_prospecto = p.id
                     LIMIT 1
                 ) as accion_nombre
                 FROM tarea t
                 INNER JOIN prospecto p ON p.id = t.id_prospecto
                 INNER JOIN usuario u ON u.id = p.id_usuario
                 WHERE p.id_usuario = " . $idUsuario . " AND t.activo=1 AND p.activo=1
                 GROUP BY p.nombre

                 UNION

                 SELECT p.nombre, p.apellidos, max(t.fecha) as fecha, u2.nombre as nombre_encargado,
                 (
                     SELECT a.nombre
                     FROM tarea t
                     INNER JOIN accion a ON a.id = t.id_accion
                     WHERE t.fecha = fecha AND t.id_prospecto = p.id
                     LIMIT 1
                 ) as accion_nombre
                 FROM tarea t
                 INNER JOIN prospecto p ON p.id = t.id_prospecto
                 INNER JOIN usuario u2 ON u2.id = p.id_usuario
                 INNER JOIN usuario u ON u.id_usuario_padre = p.id_usuario
                 WHERE u.id= " . $idUsuario . " AND t.activo=1 AND p.activo=1
                 GROUP BY p.nombre
                 AND t.activo=1

                 ");

        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByOwnerProspectoNoSeguimiento($idUsuario)
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
                 SELECT p2.id, p2.nombre as nombre, p2.apellidos, u.nombre as nombre_encargado,
                 (
                     SELECT max(t.fecha)
                     FROM tarea t
                     WHERE t.id_prospecto = p2.id
                     AND t.activo=1
                 ) as fecha
                 FROM prospecto p2
                 INNER JOIN usuario u ON u.id = p2.id_usuario
                 WHERE p2.id_usuario = " . $idUsuario . "
                 AND p2.id NOT IN
                 (
                     SELECT p.id
                     FROM tarea t
                     INNER JOIN prospecto p ON p.id = t.id_prospecto
                     WHERE p.id_usuario = " . $idUsuario . " AND t.fecha_creacion >= NOW() - INTERVAL 90 DAY AND p.id IS NOT NULL AND t.activo=1 AND p.activo = 1
                     GROUP BY p.id
                 )
                 AND p2.activo=1

                 UNION

                 SELECT p2.id, p2.nombre as nombre, p2.apellidos, u3.nombre as nombre_eencargado,
                 (
                     SELECT max(t.fecha)
                     FROM tarea t
                     WHERE t.id_prospecto = p2.id
                     AND t.activo=1
                 ) as fecha
                 FROM prospecto p2
                 INNER JOIN usuario u2 ON u2.id_usuario_padre = p2.id_usuario
                 INNER JOIN usuario u3 ON u3.id = p2.id_usuario
                 WHERE u2.id = " . $idUsuario . "
                 AND p2.id NOT IN
                 (
                     SELECT p.id
                     FROM tarea t
                     INNER JOIN prospecto p ON p.id = t.id_prospecto
                     INNER JOIN usuario u ON u.id_usuario_padre = p.id_usuario
                     WHERE u.id = " . $idUsuario . " AND t.fecha_creacion >= NOW() - INTERVAL 90 DAY AND p.id IS NOT NULL AND t.activo=1 AND p.activo = 1
                     GROUP BY p.id
                 )
                 AND p2.activo=1


                 ");

        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByProspectoSeguimiento()
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("SELECT p.nombre, max(t.fecha) as fecha, p.apellidos, u.nombre as nombre_encargado,
                 (
                     SELECT a.nombre
                     FROM tarea t
                     INNER JOIN accion a ON a.id = t.id_accion
                     WHERE t.fecha = fecha AND t.id_prospecto = p.id
                     LIMIT 1
                 ) as accion_nombre
                 FROM tarea t
                 INNER JOIN prospecto p ON p.id = t.id_prospecto
                 INNER JOIN usuario u ON u.id = p.id_usuario
                 WHERE t.activo=1 AND p.activo=1
                 GROUP BY p.nombre
                 ");

        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

    public function findByProspectoNoSeguimiento()
    {
        $connection = $this->doctrineManager->getConnection();

        $statement = $connection->prepare("
                 SELECT p2.id, p2.nombre as nombre, p2.apellidos, u.nombre as nombre_encargado,
                 (
                     SELECT max(t.fecha)
                     FROM tarea t
                     WHERE t.id_prospecto = p2.id
                     AND t.activo=1
                 ) as fecha
                 FROM prospecto p2
                 INNER JOIN usuario u ON u.id = p2.id_usuario
                 WHERE
                 p2.id NOT IN
                 (
                     SELECT p.id
                     FROM tarea t
                     INNER JOIN prospecto p ON p.id = t.id_prospecto
                     WHERE t.fecha_creacion >= NOW() - INTERVAL 90 DAY AND p.id IS NOT NULL AND t.activo=1 AND p.activo = 1
                     GROUP BY p.id
                 )
                 AND p2.activo=1

                 ");

        $statement->execute();

        $resultset = $statement->fetchAll();

        return $resultset;
    }

}
