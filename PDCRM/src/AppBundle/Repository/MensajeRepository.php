<?php
/**
 * Created by PhpStorm.
 * User: davatar
 * Date: 5/24/16
 * Time: 7:06 p.m.
 */

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MensajeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MensajeRepository extends EntityRepository
{
    private $doctrineManager;

    public function setDoctrineManager($_doctrineManager)
    {
        $this->doctrineManager = $_doctrineManager;
    }

    public function findByDestinoemailGrouped($mail)
    {
        $connection = $this->doctrineManager->getConnection();

        // 1. Totales Activas
        $statement = $connection->prepare("
          SELECT u.nombre, max(m.fecha_creacion) as fecha_ultimo_enviado
          FROM mensaje m
          INNER JOIN usuario u ON u.id = m.id_usuario
          WHERE m.destinoemail = :mail
          GROUP BY u.nombre"
        );
        $statement->bindValue('mail', $mail);
        $statement->execute();

        return $statement->fetchAll();
    }

    public function findByDestinoemailLeidoCount($mail, $leido)
    {
        $count2 = $this->getEntityManager()
            ->createQuery(
                'SELECT count(m.idMensaje) FROM AppBundle:Mensaje m WHERE m.destinoemail = :mail AND m.leido = :leido'
            )->setParameter('mail', $mail)
            ->setParameter('leido', $leido)
            ->getSingleScalarResult();

        return  $count2;
    }

    public function updateByDestinoemailLeido($mail)
    {
        $connection = $this->doctrineManager->getConnection();

        // 1. Totales Activas
        $statement = $connection->prepare("
          UPDATE mensaje
          SET leido = 1
          WHERE destinoemail = :mail"
        );
        $statement->bindValue('mail', $mail);
        $statement->execute();
    }

    public function findByOwner($idUsuario)
    {
        $resultset1 = $this->findBy(array('id_usuario' => $idUsuario));

        $resultset2 = $this->getEntityManager()
            ->createQuery(
                'SELECT m FROM AppBundle:Mensaje m JOIN m.id_usuario u WHERE u.idUsuarioPadre = :idUsuario
                ORDER by m.fechaCreacion DESC'
            )->setParameter('idUsuario', $idUsuario)->getResult();

        return array_merge($resultset2, $resultset1);
    }
}